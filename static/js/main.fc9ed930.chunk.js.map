{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","actions/ui.js","helpers/prepareEvents.js","actions/events.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/router/PublicRoute.js","components/router/PrivateRoute.js","components/router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","checkingFinished","login","user","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerName","registerEmail","registerPassword1","registerPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","response","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","autoComplete","uiOpenModal","prepareEvents","start","moment","toDate","end","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","Navbar","useSelector","onClick","clear","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","finish","clone","initEvent","notes","CalendarModal","startDate","SetStartDate","endDate","SetEndDate","validTitle","SetvalidTitle","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","resp","console","log","getState","res","eventStartAddNew","minDate","rows","AddNewFab","DeleteEventFab","display","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","_id","borderRadius","opacity","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","PublicRoute","Component","component","isLoggedIn","rest","props","to","PrivateRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc9ed930.chunk.js","sourcesContent":["export const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    \r\n    eventSetActive: '[event] Set active',\r\n    eventLogout: '[event] Logout',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    \r\n    authCheckingFinished: '[auth] Finished checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    checking: true,\r\n}\r\n\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n    \r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinished:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }    \r\n    \r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null,\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            };\r\n        \r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                     action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(e => (e.id === action.payload.id) ? action.payload : e)\r\n            }    \r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(e => (e.id !== state.activeEvent.id)),\r\n                activeEvent: null\r\n            }    \r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n            \r\n        case types.eventLogout:\r\n            return {\r\n                ...state,\r\n                events: [],\r\n                activeEvent: null,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true,\r\n            };\r\n\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false,\r\n            };\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n});","import {applyMiddleware, compose, createStore} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchWithoutToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n\r\n}\r\n\r\nconst fetchWithToken = (endpoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport {\r\n    fetchWithoutToken,\r\n    fetchWithToken\r\n}","import Swal from 'sweetalert2';\r\nimport { fetchWithoutToken, fetchWithToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async(dispatch) => {\r\n        \r\n        const response = await fetchWithoutToken('auth', {email, password}, 'POST');\r\n        const body = await response.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async(dispatch) => {\r\n        const response = await fetchWithoutToken('auth/new', {email, password, name}, 'POST');\r\n        const body = await response.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n        const response = await fetchWithToken('auth/renew');\r\n        const body = await response.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            dispatch(checkingFinished());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinished = () => ({type: types.authCheckingFinished});\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n\r\n    }\r\n}\r\n\r\nconst logout = () => ({type: types.authLogout});","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        });\r\n    }\r\n    \r\n\r\n\r\n    return [values, handleInputChange, reset];\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        loginEmail: '',\r\n        loginPassword: ''\r\n    });\r\n    \r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        registerName: '',\r\n        registerEmail: '',\r\n        registerPassword1: '',\r\n        registerPassword2: ''\r\n    });\r\n\r\n    const {loginEmail, loginPassword} = formLoginValues;\r\n    const {registerName, registerEmail, registerPassword1, registerPassword2} = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(startLogin(loginEmail, loginPassword));\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (registerPassword1 !== registerPassword2) {\r\n            return Swal.fire('Error', 'Passwords should be equal', 'error')\r\n        }\r\n\r\n        dispatch(startRegister(registerEmail, registerPassword1, registerName));\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Login</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name=\"loginEmail\"\r\n                                value={loginEmail}\r\n                                onChange={handleLoginInputChange}\r\n                                autoComplete=\"off\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name=\"loginPassword\"\r\n                                value={loginPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Register</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Name\"\r\n                                name=\"registerName\"\r\n                                value={registerName}\r\n                                onChange={handleRegisterInputChange}\r\n                                autoComplete=\"off\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name=\"registerEmail\"\r\n                                value={registerEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                                autoComplete=\"off\"\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\" \r\n                                name=\"registerPassword1\"\r\n                                value={registerPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repeat your password\" \r\n                                name=\"registerPassword2\"\r\n                                value={registerPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Create account\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { types } from '../types/types';\r\n\r\nexport const uiOpenModal = () => ({type: types.uiOpenModal});\r\n\r\nexport const uiCloseModal = () => ({type: types.uiCloseModal});\r\n","import moment from 'moment';\r\n\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map(e => ({\r\n        ...e,\r\n        start: moment(e.start).toDate(),\r\n        end: moment(e.end).toDate(),\r\n    }));\r\n\r\n}","import Swal from 'sweetalert2';\r\nimport { fetchWithToken } from '../helpers/fetch';\r\nimport { prepareEvents } from '../helpers/prepareEvents';\r\nimport { types } from '../types/types';\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async(dispatch, getState) => {\r\n        \r\n        const {uid, name} = getState().auth;\r\n\r\n        try {\r\n            const res = await fetchWithToken('events', event, 'POST');\r\n            const body = await res.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    uid,\r\n                    name\r\n                }\r\n                dispatch(eventAddNew(event));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({type: types.eventClearActiveEvent});\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchWithToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n} \r\n\r\nconst eventUpdated = (event) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async(dispatch, getState) => {\r\n\r\n        const {id} = getState().calendar.activeEvent;\r\n        \r\n        try {\r\n            const resp = await fetchWithToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    }\r\n\r\nconst eventDeleted = () => ({type: types.eventDeleted});\r\n\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n\r\n            const res = await fetchWithToken('events');\r\n            const body = await res.json();\r\n\r\n            const events = prepareEvents(body.events);\r\n\r\n            dispatch(eventLoaded(events));\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }    \r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({type: types.eventLogout});","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { eventLogout } from '../../actions/events';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {name} = useSelector(state => state.auth);\r\n    \r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n        dispatch(eventLogout());\r\n    }\r\n    \r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleLogout}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Logout</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    \r\n    const {title, user: {name}} = event;\r\n    \r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span> - {name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst finish = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: finish.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const [startDate, SetStartDate] = useState(now.toDate());\r\n    const [endDate, SetEndDate] = useState(finish.toDate());\r\n    const [validTitle, SetvalidTitle] = useState(true);\r\n\r\n    const dispatch = useDispatch();\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    \r\n    const {title, notes, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n        \r\n    }, [activeEvent, setFormValues]);\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n    };\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'End date must be bigger', 'error');\r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            return SetvalidTitle(false);\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues));\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n        \r\n        SetvalidTitle(true);\r\n        closeModal();\r\n    }\r\n    \r\n\r\n\r\n    const handleStartDateChange =(e) => {\r\n        SetStartDate(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e,\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange =(e) => {\r\n        SetEndDate(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e,\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <Modal\r\n        isOpen={modalOpen}\r\n        onRequestClose={closeModal}\r\n        style={customStyles}\r\n        closeTimeoutMS={200}\r\n        className=\"modal\"\r\n        overlayClassName=\"modal-background\"\r\n      >\r\n            <h1> {(activeEvent) ? ' Edit event ' : ' New event '} </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleSubmitForm}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Start date</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={startDate}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>End date</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={endDate}\r\n                        className=\"form-control\"\r\n                        minDate={startDate}\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Title and notes</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${(!validTitle) && 'is-invalid'}`}\r\n                        placeholder=\"Title of event\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">A short description</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notes\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Additional info</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Save</span>\r\n                </button>\r\n\r\n            </form>\r\n      </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClick = () => {\r\n        dispatch(uiOpenModal());\r\n    } \r\n    \r\n    return (\r\n        <button \r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleClick}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    \r\n    const {activeEvent} = useSelector(state => state.calendar)\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n    \r\n    return (\r\n        <button \r\n            className=\"btn btn-danger fab-danger\"\r\n            style={(activeEvent) ? {display: 'block'} : {display: 'none'}}\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Delete event</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month')\r\n    const dispatch = useDispatch();\r\n    const {events} = useSelector(state => state.calendar)\r\n    const {uid} = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(eventStartLoading());\r\n\r\n    }, [dispatch]);\r\n    \r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367fc7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: '0.8',\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {style};\r\n    }\r\n    \r\n    return (\r\n        <div className=\"calendar-screen\">\r\n\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n            <DeleteEventFab />\r\n\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    component: Component,\r\n     isLoggedIn,\r\n      ...rest\r\n}) => {\r\n\r\n    \r\n    return (\r\n        <Route {...rest} \r\n            component={(props) => (\r\n                (!isLoggedIn)\r\n                ? (<Component {...props} />)\r\n                : (<Redirect to=\"/\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPublicRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    component: Component,\r\n     isLoggedIn,\r\n      ...rest\r\n}) => {\r\n\r\n    \r\n    return (\r\n        <Route {...rest} \r\n            component={(props) => (\r\n                (isLoggedIn)\r\n                ? (<Component {...props} />)\r\n                : (<Redirect to=\"/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n} from 'react-router-dom';\r\nimport { startChecking } from '../../actions/auth';\r\nimport { LoginScreen } from '../auth/LoginScreen';\r\nimport { CalendarScreen } from '../calendar/CalendarScreen';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth)\r\n    \r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(startChecking());\r\n        \r\n    }, [dispatch]);\r\n    \r\n    if (checking) {\r\n        return (<h2>Wait...</h2>);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Router>\r\n\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact path=\"/login\" \r\n                        component={LoginScreen}\r\n                        isLoggedIn={!!uid} \r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact path=\"/\" \r\n                        component={CalendarScreen} \r\n                        isLoggedIn={!!uid} \r\n                    />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n\r\n            </Router>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './components/router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}